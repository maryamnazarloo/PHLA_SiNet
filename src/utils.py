# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/112QDqAUa_X5_NDLi8sGxI8Q76VL_Eea7
"""

"""
Helper functions for HLA-peptide prediction pipeline
"""
import numpy as np
import pandas as pd
from typing import Union, List

def validate_peptides(peptides: Union[List[str], pd.Series]) -> List[str]:
    """
    Validate peptide sequences (length 8-15, valid amino acids)

    Args:
        peptides: List of peptide sequences

    Returns:
        List of valid peptides in uppercase

    Raises:
        ValueError: If any peptide is invalid
    """
    valid_aas = {'A', 'R', 'N', 'D', 'C', 'Q', 'E', 'G', 'H', 'I',
                 'L', 'K', 'M', 'F', 'P', 'S', 'T', 'W', 'Y', 'V'}

    cleaned = []
    for seq in peptides:
        seq = str(seq).upper().strip()
        if not (8 <= len(seq) <= 15:
            raise ValueError(f"Peptide {seq} must be 8-15 amino acids long")
        if any(aa not in valid_aas for aa in seq):
            raise ValueError(f"Peptide {seq} contains invalid amino acids")
        cleaned.append(seq)
    return cleaned

def clean_hla_allele_names(hla_alleles: Union[List[str], pd.Series]) -> List[str]:
    """
    Standardize HLA allele names (remove '*' and whitespace)
    Example: 'HLA-A*02:01' â†’ 'HLA-A02:01'
    """
    return [str(allele).replace('*', '').strip() for allele in hla_alleles]

def save_predictions(results: pd.DataFrame, output_path: str):
    """
    Save prediction results with format detection

    Args:
        results: DataFrame with predictions
        output_path: Supports .csv, .tsv, .json
    """
    if output_path.endswith('.csv'):
        results.to_csv(output_path, index=False)
    elif output_path.endswith('.tsv'):
        results.to_csv(output_path, sep='\t', index=False)
    elif output_path.endswith('.json'):
        results.to_json(output_path, orient='records')
    else:
        raise ValueError("Unsupported format. Use .csv/.tsv/.json")

def load_hla_sequences(sequence_file: str) -> dict:
    """
    Load HLA sequences from FASTA file

    Returns:
        Dictionary {hla_allele: sequence}
    """
    # Implementation would go here
    pass